
===== edit_scatter_arc ===== 
    gui_section(style=form_style)

    gui_row(slider_row)
    """count"""
    gui_slider("low: 1; high:100.0;", var="count")
    gui_row(separator)
    gui_blank()
    gui_row(input_row)
    s_x = "{x}"
    gui_input("desc: x", var="s_x")

    s_y = "{y}"
    gui_input("desc: y", var="s_y")
    s_z = "{z}"
    gui_input("desc: z", var="s_z")
    gui_row(input_row)

    s_w = "{w}"
    gui_input("desc: radius", var="s_w")
    ###########
    ##
    gui_row(separator)
    gui_blank()
    gui_row(slider_row)
    """start angle"""
    gui_slider("low: 0; high:360.0;", var="a_start")
    gui_row(slider_row)
    """y end angle"""
    gui_slider("low: 0; high:360.0;", var="a_end")
    #############
    ##
    gui_row(separator)
    gui_blank()
    gui_row(slider_row)
    gui_checkbox("text: random;state: {rand}", var="rand")

    await gui():
        * "Apply":
            x = int(s_x)
            y = int(s_y)
            z = int(s_z)
            w = int(s_w)

            task_schedule(apply_scatter, data={"vecs": scatter_arc(int(count), x,y,z, w, a_start, a_end, rand)})

    jump scatter_client_common

